binary,octal,mnemonic,category,implemented,description,reference
0000000000000000,000000,STZ,MEM,TRUE,Store zero,III.2.1
0000100000000000,004000,STA,MEM,TRUE,Store A,III.2.1
0001000000000000,010000,STT,MEM,TRUE,Store T,III.2.1
0001100000000000,014000,STX,MEM,TRUE,Store X,III.2.1
0100000000000000,040000,MIN,MEM,,Memory Increment & skip if zero (why does this have the same octal as LDT),III.2.1
0100100000000000,044000,LDA,MEM,TRUE,Load A,III.2.1
0100000000000000,040000,LDT,MEM,TRUE,Load T,III.2.1
0101100000000000,054000,LDX,MEM,TRUE,Load X,III.2.1
0110000000000000,060000,ADD,MEM,TRUE,Add to A,III.2.1
0110100000000000,064000,SUB,MEM,TRUE,Subtract from A,III.2.1
0111000000000000,070000,AND,MEM,TRUE,Logical AND to A,III.2.1
0111100000000000,074000,ORA,MEM,TRUE,Logical inclusive OR to A,III.2.1
1010000000000000,120000,MPY,MEM,TRUE,Multiply integer,III.2.1
0010000000000000,020000,STD,MEM,,Store double word,III.2.1
0010100000000000,024000,LDD,MEM,,Load double word,III.2.1
0011000000000000,030000,STF,MEM,,Store floating accumulator,III.2.1
0011100000000000,034000,LDF,MEM,,Load floating accumulator,III.2.1
1000000000000000,100000,FAD,MEM,,Add to floating accumulator,III.2.1
1000100000000000,104000,FSB,MEM,,Subtract from floating accumulator,III.2.1
1001000000000000,110000,FMU,MEM,,Multiply floating accumulator,III.2.1
1001100000000000,114000,FDV,MEM,,Divide floating accumulator,III.2.1
1100010110000000,142600,SBYT,MEM,,Store byte,III.2.1
1100010010000000,142200,LBYT,MEM,,Load byte,III.2.1
1101110000000000,156000,LRB,REGBLOCK,,Load register block,III.2.2
1101010100000010,152402,SRB,REGBLOCK,,Store register block,III.2.2
1101001100000000,151400,NLZ,CONV,,Convert the number in A to a floating number in FA,III.2.3
1101010000000000,152000,DNZ,CONV,,Convert the floating number in FA to a fixed point number in A,III.2.3
1111000100000000,170400,SAA,ARG,TRUE,Set argument to A,III.2.4
1111010100000000,172400,AAA,ARG,TRUE,Add argument to A,III.2.4
1111001100000000,171400,SAX,ARG,TRUE,Set argument to X,III.2.4
1111011100000000,173400,AAX,ARG,TRUE,Add argument to X,III.2.4
1111001000000000,171000,SAT,ARG,TRUE,Set argument to T,III.2.4
1111011000000000,173000,AAT,ARG,TRUE,Add argument to T,III.2.4
1111000000000000,170000,SAB,ARG,TRUE,Set argument to B,III.2.4
1111010000000000,172000,AAB,ARG,TRUE,Add argument to B,III.2.4
1100110000000000,146000,RADD,REG,,Add source to destination,III.2.5
1100110110000000,146600,RSUB,REG,,Subtract source from destination,III.2.5
1100110001000000,146100,COPY,REG,,Register transfer,III.2.5
0000000100000000,000400,AD1,REG,,Also add one to destination,III.2.5
0000001000000000,001000,ADC,REG,,Also add old carry to destination,III.2.5
1100100000000000,144000,SWAP,REG,,Register exchange,III.2.5
1100100100000000,144400,RAND,REG,,Logical AND to destination,III.2.5
1100101000000000,145000,REXO,REG,,Logical exclusive OR,III.2.5
1100101100000000,145400,RORA,REG,,Logical inclusive OR,III.2.5
0000000001000000,000100,CLD,REG,,Clear destination before operation,III.2.5
0000000010000000,000200,CM1,REG,,Use oneâ€™s complement of source,III.2.5
1100110001100010,146142,EXIT,REG,,Return from subroutine,III.2.5
1100110001000000,146100,RCLR,REG,,Register clear,III.2.5
1100110100000000,146400,RINC,REG,,Register increment,III.2.5
1100110010000000,146200,RCDR,REG,,Register decrement,III.2.5
1100001010000000,141200,RMPY,REG,,Multiply source with destination. Result in double accumulator.,III.2.5
1100001110000000,141600,RDIV,REG,,Divide double accumulator with source register. Quotient in A remainder in D.,III.2.5
1111101000000000,175000,BSKP,BIT,,Skip next location if condition is true,III.2.6
1111100000000000,174000,BSET,BIT,,Set specified bit equal to specified cond,III.2.6
1111110010000000,176200,BSTA,BIT,,Store and clear K,III.2.6
1111110000000000,176000,BSTC,BIT,,Store and complement and set K,III.2.6
1111110110000000,176600,BLDA,BIT,,Load K,III.2.6
1111110100000000,176400,BLDC,BIT,,Load bit complement to K,III.2.6
1111111000000000,177000,BANC,BIT,,Logical AND with bit complement,III.2.6
1111111100000000,177400,BORC,BIT,,Logical OR with bit complement,III.2.6
1111111010000000,177200,BAND,BIT,,Logical AND to K,III.2.6
1111111110000000,177600,BORA,BIT,,Logical OR to K,III.2.6
1010100000000000,124000,JMP,MEM,TRUE,Jump,III.2.7
1011100000000000,134000,JPL,MEM,TRUE,Jump to subroutine,III.2.7
1011000000000000,130000,JAP,CONDJUMP,,Jump if A is positive,III.2.7
1011000100000000,130400,JAN,CONDJUMP,,Jump if A is negative,III.2.7
1011001000000000,131000,JAZ,CONDJUMP,,Jump if A is zero,III.2.7
1011001100000000,131400,JAF,CONDJUMP,,Jump if A is non-zero,III.2.7
1011011100000000,133400,JXN,CONDJUMP,,Jump if X is negative,III.2.7
1011010000000000,132000,JPC,CONDJUMP,,Increment X and jump if positive,III.2.7
1011010100000000,132400,JNC,CONDJUMP,,Increment X and jump if negative,III.2.7
1100000000000000,140000,SKP,SKIP,,Skip next location if specified condition true,III.2.7
1101100000000000,154000,SHT,SHIFT,,Shift T register,III.2.8
1101100010000000,154200,SHD,SHIFT,,Shift D register,III.2.8
1101101101000000,155500,SHA,SHIFT,,Shift A register,III.2.8
1101100110000000,154600,SAD,SHIFT,,Shift A and D register,III.2.8
0000001000000000,001000,ROT,SHIFT,,Rotational shift,III.2.8
0000010000000000,002000,ZIN,SHIFT,,Zero in shift,III.2.8
0000011000000000,003000,LIN,SHIFT,,Linked end input,III.2.8
,,SHR,SHIFT,,Shift Right,III.2.8
1101000000000000,150000,TRA,TRANS,,Transfer R to A,III.2.9
1101000001000000,150100,TRR,TRANS,,Transfer A to R,III.2.9
1101000010000000,150200,MCL,TRANS,,Masked clear of specified register,III.2.9
1101000011000000,150300,MST,TRANS,,Masked set of specified register,III.2.9
1100000110000000,140600,EXR,EXEC,,Execute instruction found in specified register,III.2.10
1101011110000000,153600,IRR,INTER,,Inter-register Read,III.2.10
1101011100000000,153400,IWR,INTER,,Inter-register Write,III.2.10
1101000100000010,150402,ION,SYS,,Turn on interrupt system,III.2.11
1101000100001000,150410,PON,SYS,,Turn on paging system,III.2.11
1101000100000001,150401,IOF,SYS,,Turn off interrupt system,III.2.11
1101000100000100,150404,POF,SYS,,Turn off paging system,III.2.11
1101001000000000,151000,WAIT,WAIT,,Wait,III.2.11
1110100000000000,164000,IOX,IO,,Transfer data to/from specified device,III.2.12
1100011110000000,143600,IDENT,IDENT,,Transfer IDENT code of interrupting device with highest priority on level to A register,III.2.13